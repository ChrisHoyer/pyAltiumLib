name: Python package

on:
  push:
    branches:
      - master 

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Check out repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel

    - name: Read version from __init__.py
      id: read_version
      run: |
        VERSION=$(python -c "from pathlib import Path; exec(open('src/pyaltiumlib/__init__.py').read()); print(__version__)")
        echo "VERSION=$VERSION" >> $GITHUB_ENV

    - name: Configure Git
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"

    - name: Check if tag already exists
      id: check_tag
      run: |
        if git ls-remote --tags origin | grep -q "refs/tags/${{ env.VERSION }}"; then
          echo "Tag already exists, skipping tag creation."
          echo "TAG_EXISTS=true" >> $GITHUB_ENV
        else
          echo "Creating new tag: ${{ env.VERSION }}"
          echo "TAG_EXISTS=false" >> $GITHUB_ENV
        fi

    - name: Create and push Git tag (if needed)
      if: env.TAG_EXISTS == 'false'
      run: |
        git tag ${{ env.VERSION }}
        git push origin ${{ env.VERSION }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Build package
      run: |
        python setup.py sdist bdist_wheel

    - name: Create GitHub release
      run: |
        gh release create ${{ env.VERSION }} dist/* --title "Release ${{ env.VERSION }}" --notes "Release version created from __init__.py"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
